"0","simulate_berry_esseen_snapshots <- function("
"0","    distributions_to_test = c(""Uniform"", ""Exponential""),"
"0","    n_values = c(5, 10, 20, 50, 100, 200, 500),"
"0","    num_simulations = 10000,"
"0","    n_values_for_x_plot = c(20, 100, 200) # Updated argument"
"0","  ) {"
"0","  "
"0","  #1. Parameter setup and moment calculation"
"0","  set.seed(42)"
"0","  params <- list(Uniform = list(min = 0, max = 10), Exponential = list(rate = 0.5))"
"0","  C_BE <- 0.4748"
"0","  message(""Displaying exact theoretical moments (just for the record...)"")"
"0","  moment_calculations <- lapply(distributions_to_test, function(dist) {"
"0","    if (dist == ""Uniform"") {"
"0","      a <- params$Uniform$min; b <- params$Uniform$max; mu <- (a + b) / 2; sigma <- (b - a) / sqrt(12)"
"0","      rho_integrand <- function(x) abs(x - mu)^3 * dunif(x, a, b); rho <- integrate(rho_integrand, lower = a, upper = b)$value"
"0","    } else if (dist == ""Exponential"") {"
"0","      lambda <- params$Exponential$rate; mu <- 1 / lambda; sigma <- 1 / lambda"
"0","      rho_integrand <- function(x) abs(x - mu)^3 * dexp(x, rate = lambda); rho <- integrate(rho_integrand, lower = 0, upper = Inf)$value"
"0","    }"
"0","    data.frame(distribution = dist, mu = mu, sigma = sigma, rho = rho, shape_factor = rho / (sigma^3))"
"0","  })"
"0","  pop_moments <- bind_rows(moment_calculations)"
"0","  print(pop_moments)"
"0",""
"0","  #2. Simulation and generation of Plot 1 "
"0","  simulation_grid <- crossing(distribution = distributions_to_test, n = n_values)"
"0","  results_list <- pmap(simulation_grid, function(distribution, n) {"
"0","    moments <- pop_moments %>% filter(distribution == !!distribution)"
"0","    z_values <- replicate(num_simulations, {"
"0","      sample_data <- switch(distribution, ""Uniform"" = runif(n, params$Uniform$min, params$Uniform$max), ""Exponential"" = rexp(n, rate = params$Exponential$rate))"
"0","      (mean(sample_data) - moments$mu) / (moments$sigma / sqrt(n))"
"0","    })"
"0","    ecdf_z <- ecdf(z_values); knots_z <- knots(ecdf_z); observed_error <- max(abs(ecdf_z(knots_z) - pnorm(knots_z)))"
"0","    theoretical_bound <- C_BE * moments$shape_factor * (1 / sqrt(n))"
"0","    data.frame(distribution = distribution, n = n, observed_error = observed_error, theoretical_bound = theoretical_bound)"
"0","  })"
"0","  results_df <- bind_rows(results_list)"
"0","  plot1_data <- results_df %>% pivot_longer(c(""observed_error"", ""theoretical_bound""), names_to = ""type"", values_to = ""error_value"")"
"0","  p_error_vs_n <- ggplot(plot1_data, aes(x = n, y = error_value, color = type, shape = type)) + geom_line(aes(linetype = type), linewidth = 1) + geom_point(size = 3) +"
"0","    facet_wrap(~ distribution, scales = ""free_y"") + scale_y_log10() + scale_color_manual(values = c(observed_error = ""blue"", theoretical_bound = ""red""), labels = c(""Observed Max Error"", ""Theoretical Bound"")) +"
"0","    scale_shape_manual(values = c(observed_error = 16, theoretical_bound = 17), labels = c(""Observed Max Error"", ""Theoretical Bound"")) +"
"0","    scale_linetype_manual(values = c(observed_error = ""solid"", theoretical_bound = ""dashed""), labels = c(""Observed Max Error"", ""Theoretical Bound"")) +"
"0","    labs(title = ""Berry-Esseen Theorem: Observed Error vs. Theoretical Bound"", subtitle = ""Note: y-axis is on a log scale to show the convergence rate."", x = ""Sample Size (n)"", y = ""Maximum Error |F_n(x) - Φ(x)| (log scale)"") +"
"0","    theme_minimal() + theme(legend.title = element_blank(), legend.position = ""bottom"")"
"0",""
"0","  #3. Simulation for plot 2"
"0","  "
"0","  # A grid for all snapshot simulations"
"0","  snapshot_grid <- crossing(distribution = distributions_to_test, n = n_values_for_x_plot)"
"0","  "
"0","  error_curve_list <- pmap(snapshot_grid, function(distribution, n) {"
"0","    moments <- pop_moments %>% filter(distribution == !!distribution)"
"0","    z_values_fixed_n <- replicate(num_simulations, {"
"0","      sample_data <- switch(distribution, ""Uniform"" = runif(n, params$Uniform$min, params$Uniform$max), ""Exponential"" = rexp(n, rate = params$Exponential$rate))"
"0","      (mean(sample_data) - moments$mu) / (moments$sigma / sqrt(n))"
"0","    })"
"0","    ecdf_z <- ecdf(z_values_fixed_n)"
"0","    x_grid <- seq(min(z_values_fixed_n), max(z_values_fixed_n), length.out = 1000)"
"0","    "
"0","    # Return a data frame that includes the 'n' for this simulation run"
"0","    data.frame(distribution = distribution, n = n, x = x_grid, error_term = ecdf_z(x_grid) - pnorm(x_grid))"
"0","  })"
"0","  "
"0","  error_curve_df <- bind_rows(error_curve_list)"
"0","  "
"0","  # 4. Generate Plot 2 using facet_grid"
"0","  p_error_vs_x <- ggplot(error_curve_df, aes(x = x, y = error_term)) +"
"0","    geom_line(color = ""purple"", linewidth = 1) +"
"0","    geom_hline(yintercept = 0, linetype = ""dashed"", color = ""black"") +"
"0","    "
"0","    # Use facet_grid to create a matrix of plots: rows are distributions, columns are n"
"0","    facet_grid(distribution ~ n, labeller = label_both, scales = ""free_x"") +"
"0","    "
"0","    labs("
"0","      title = ""Snapshots of the Berry-Esseen Error Term F_n(x) - Φ(x)"","
"0","      subtitle = ""Showing convergence to zero as sample size (n) increases"","
"0","      x = ""Standardized Value (x)"","
"0","      y = ""Error Term"""
"0","    ) +"
"0","    theme_minimal() +"
"0","    theme(strip.text = element_text(size = 10)) # Adjust facet label size if needed"
"0",""
"0","  #5. Return Plots "
"0","  #message(""\nDone."")"
"0","  return(list(error_vs_n_plot = p_error_vs_n, error_vs_x_plot = p_error_vs_x))"
"0","}"
