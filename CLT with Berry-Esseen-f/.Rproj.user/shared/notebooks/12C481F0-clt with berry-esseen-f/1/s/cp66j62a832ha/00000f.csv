"0",""
"0","#Constructing the list in several steps"
"0","plot_theoretical_distributions <- function() {"
"0","  #1. Define the distribution parameters"
"0","  params <- list("
"0","    uniform = list(min = 0, max = 10),"
"0","    exponential = list(rate = 0.5),"
"0","    gamma = list(shape = 2, scale = 2)"
"0","  )"
"0","  # This part of the code may be modified with the insertion of new parameters (min, max, rate, shape and scale) determining the parent distributions"
"0","  #2. Create a grid of x-values for each distribution"
"0","  curve_data <- crossing("
"0","    distribution = factor(c(""Uniform"", ""Exponential"", ""Gamma""), levels = c(""Uniform"", ""Exponential"", ""Gamma"")),"
"0","    x = seq(-5, 25, length.out = 600) # Use many points for a smooth curve"
"0","  ) %>%"
"0","  #3. Calculate the y-values for both PDF and CDF based on the distribution"
"0","  mutate("
"0","    pdf_y = case_when("
"0","      distribution == ""Uniform""     ~ dunif(x, min = params$uniform$min, max = params$uniform$max),"
"0","      distribution == ""Exponential"" ~ dexp(x, rate = params$exponential$rate),"
"0","      distribution == ""Gamma""       ~ dgamma(x, shape = params$gamma$shape, scale = params$gamma$scale),"
"0","      TRUE ~ NA_real_ # Default case"
"0","    ),"
"0","    cdf_y = case_when("
"0","      distribution == ""Uniform""     ~ punif(x, min = params$uniform$min, max = params$uniform$max),"
"0","      distribution == ""Exponential"" ~ pexp(x, rate = params$exponential$rate),"
"0","      distribution == ""Gamma""       ~ pgamma(x, shape = params$gamma$shape, scale = params$gamma$scale),"
"0","      TRUE ~ NA_real_"
"0","    )"
"0","  )"
"0","  #4. Create the PDF plots using geom_line"
"0","  p_pdf <- ggplot(curve_data, aes(x = x, y = pdf_y)) +"
"0","    geom_line(color = ""red"", linewidth = 1.2) +"
"0","    facet_wrap(~ distribution, scales = ""free"") +"
"0","    labs("
"0","      title = ""Probability Density Functions (PDFs)"","
"0","      subtitle = ""Illustrating the Shape of Parent Populations"","
"0","      x = ""Value"","
"0","      y = ""Density"""
"0","    ) +"
"0","    theme_minimal() +"
"0","    theme(plot.title = element_text(hjust = 0.5), plot.subtitle = element_text(hjust = 0.5))"
"0","    #4. Create the CDF plots using geom_line"
"0","  p_cdf <- ggplot(curve_data, aes(x = x, y = cdf_y)) +"
"0","    geom_line(color = ""dodgerblue"", linewidth = 1.2) +"
"0","    facet_wrap(~ distribution, scales = ""free"") +"
"0","    labs("
"0","      title = ""Cumulative Distribution Functions (CDFs)"","
"0","      subtitle = ""Illustrating the Shape of Parent Populations"","
"0","      x = ""Value"","
"0","      y = ""Cumulative Probability"""
"0","    ) +"
"0","    theme_minimal() +"
"0","    theme(plot.title = element_text(hjust = 0.5), plot.subtitle = element_text(hjust = 0.5))"
"0","  #5. Return both plot objects in a list"
"0","   return(list("
"0","    pdf_plots = p_pdf,"
"0","    cdf_plots = p_cdf"
"0","  ))"
"0","}"
"0","  #6. Create the list"
"0","  theoretical_plots <- plot_theoretical_distributions()"
