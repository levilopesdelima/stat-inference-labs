"0",""
"0","plot_clt_final_version <- function(population_size = 10000, sample_size = 50, num_samples = 10000) {"
"0","  set.seed(42) # for reproducibility"
"0","  #1. Create populations and store true parameters"
"0","  population_uniform <- runif(population_size, 0, 10)"
"0","  population_exponential <- rexp(population_size, rate = 0.5)"
"0","  population_gamma <- rgamma(population_size, shape = 2, scale = 2)"
"0","  pop_stats <- data.frame("
"0","    distribution = factor(c(""Uniform"", ""Exponential"", ""Gamma""), levels = c(""Uniform"", ""Exponential"", ""Gamma"")),"
"0","    pop_mean = c(mean(population_uniform), mean(population_exponential), mean(population_gamma)),"
"0","    pop_sd = c(sd(population_uniform), sd(population_exponential), sd(population_gamma))"
"0","  )"
"0","  #2. Simulate sample means"
"0","  simulate_means <- function(population, n_samples, samp_size) {"
"0","    replicate(n_samples, mean(sample(population, size = samp_size, replace = TRUE)))"
"0","  }"
"0","  plot_data <- data.frame("
"0","    means = c("
"0","      simulate_means(population_uniform, num_samples, sample_size),"
"0","      simulate_means(population_exponential, num_samples, sample_size),"
"0","      simulate_means(population_gamma, num_samples, sample_size)"
"0","    ),"
"0","    distribution = factor(rep(c(""Uniform"", ""Exponential"", ""Gamma""), each = num_samples), levels = c(""Uniform"", ""Exponential"", ""Gamma""))"
"0","  )"
"0","  #3. Create data for annotations and vertical lines"
"0","  stats_summary <- plot_data %>%"
"0","    group_by(distribution) %>%"
"0","    summarise("
"0","      obs_mean = mean(means),"
"0","      obs_var = var(means),"
"0","      .groups = 'drop'"
"0","    ) %>%"
"0","    left_join(pop_stats, by = ""distribution"") %>%"
"0","    mutate("
"0","      obs_sd = sqrt(obs_var),"
"0","      theoretical_sd = pop_sd / sqrt(sample_size),"
"0","      peak_y = dnorm(pop_mean, mean = pop_mean, sd = theoretical_sd),"
"0","      segment_y_end = peak_y / 3,"
"0","      label = sprintf("
"0","        ""Observed SD: %.4f\nTheoretical SD (σ/√n): %.4f"","
"0","        obs_sd, theoretical_sd"
"0","      )"
"0","    )"
"0"," #4. Create data for the theoretical red durve"
"0","  curve_data <- plot_data %>%"
"0","    group_by(distribution) %>%"
"0","    reframe(x_coords = seq(min(means), max(means), length.out = 200)) %>%"
"0","    left_join(pop_stats, by = ""distribution"") %>%"
"0","    mutate("
"0","      y_coords = dnorm(x_coords, mean = pop_mean, sd = pop_sd / sqrt(sample_size))"
"0","    )"
"0","  #5. Generate the final plot"
"0","  p <- ggplot(plot_data, aes(x = means)) +"
"0","    geom_histogram(aes(y = after_stat(density)), bins = 40, fill = ""lightblue"", color = ""black"", alpha = 0.7) +"
"0","    geom_line(data = curve_data, aes(x = x_coords, y = y_coords), color = ""red"", linewidth = 1) +"
"0","  #6. Include the vertical line segments for spread"
"0","    geom_segment(data = stats_summary, aes(x = pop_mean, y = 0, xend = pop_mean, yend = segment_y_end, color = ""Theoretical""), linetype = ""solid"", linewidth = 1) +"
"0","    geom_segment(data = stats_summary, aes(x = pop_mean - theoretical_sd, y = 0, xend = pop_mean - theoretical_sd, yend = segment_y_end, color = ""Theoretical""), linetype = ""dashed"", linewidth = 1) +"
"0","    geom_segment(data = stats_summary, aes(x = pop_mean + theoretical_sd, y = 0, xend = pop_mean + theoretical_sd, yend = segment_y_end, color = ""Theoretical""), linetype = ""dashed"", linewidth = 1) +"
"0","    geom_segment(data = stats_summary, aes(x = obs_mean, y = 0, xend = obs_mean, yend = segment_y_end, color = ""Observed""), linetype = ""solid"", linewidth = 1) +"
"0","    geom_segment(data = stats_summary, aes(x = obs_mean - obs_sd, y = 0, xend = obs_mean - obs_sd, yend = segment_y_end, color = ""Observed""), linetype = ""dashed"", linewidth = 1) +"
"0","    geom_segment(data = stats_summary, aes(x = obs_mean + obs_sd, y = 0, xend = obs_mean + obs_sd, yend = segment_y_end, color = ""Observed""), linetype = ""dashed"", linewidth = 1) +"
"0","geom_text(data = stats_summary, aes(label = label), x = Inf, y = Inf, hjust = 1.05, vjust = 1.05, size = 3.5) +"
"0","    facet_wrap(~ distribution, scales = ""free"") +"
"0","    scale_color_manual(name = ""Spread (SD) Indicators"", values = c(""Theoretical"" = ""darkgreen"", ""Observed"" = ""darkorange"")) +"
"0","    labs("
"0","      title = ""Distribution of Sample Means vs. Theoretical Normal Curve (CLT)"","
"0","      subtitle = paste(""Solid lines are Means, Dashed lines are plus-minus one Std. Dev. | n ="", sample_size),"
"0","      x = ""Sample Mean"","
"0","      y = ""Density"""
"0","    ) +"
"0","    theme_minimal() +"
"0","    theme("
"0","      plot.title = element_text(hjust = 0.5, size = 16),"
"0","      plot.subtitle = element_text(hjust = 0.5, size = 12),"
"0","      legend.position = ""bottom"""
"0","    )"
"0","  "
"0","  return(p)"
"0","}"
