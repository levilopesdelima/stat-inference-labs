"0","print_coeffs_with_ci <- function(model) {"
"0","  s <- summary(model)"
"0","  coeffs <- s$coefficients"
"0","  cis <- confint(model)"
"0","  get_stars <- function(p_value) {"
"0","    if (p_value < 0.001) return(""***"")"
"0","    if (p_value < 0.01)  return(""**"")"
"0","    if (p_value < 0.05)  return(""*"")"
"0","    if (p_value < 0.1)   return(""."")"
"0","    return("" "")"
"0","  }"
"0","  # Build the text output line-by-line"
"0","  output_lines <- ""Coefficients:"""
"0","  # Note the extra space for the significance star column at the end"
"0","  col_names <- sprintf(""%-12s %10s %11s %8s %10s %10s %9s %s"", "
"0","                       """", ""Estimate"", ""Std. Error"", ""t value"", ""Pr(>|t|)"", ""2.5 %"", "
"0","                       ""97.5 % "", """")"
"0","  output_lines <- c(output_lines, col_names)"
"0","  # Create a formatted line for each coefficient"
"0","  for (i in 1:nrow(coeffs)) {"
"0","    row_name <- rownames(coeffs)[i]"
"0","    line_data <- c("
"0","      # Predictor name, left-aligned"
"0","      sprintf(""%-12s"", row_name), "
"0","      # Coefficient values, right-aligned with specific decimal places"
"0","      sprintf(""%10.6f"", coeffs[i, ""Estimate""]),"
"0","      sprintf(""%11.6f"", coeffs[i, ""Std. Error""]),"
"0","      sprintf(""%8.3f"",  coeffs[i, ""t value""]),"
"0","      # P-value, using scientific notation if small, or fixed if larger"
"0","      sprintf(""%10s"", format.pval(coeffs[i, ""Pr(>|t|)""], digits = 2)),"
"0","      # Confidence Intervals"
"0","      sprintf(""%10.4f"", cis[i, 1]), # Lower bound"
"0","      sprintf(""%9.4f"", cis[i, 2]),  # Upper bound"
"0","      # Significance stars"
"0","      get_stars(coeffs[i, ""Pr(>|t|)""])"
"0","    )"
"0","  # Paste all parts of the line together"
"0","    output_lines <- c(output_lines, paste(line_data, collapse = "" ""))"
"0","  }"
"0","# Add the footer with the significance codes"
"0","  output_lines <- c(output_lines, ""---"")"
"0","  output_lines <- c(output_lines, ""Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"")"
"0","  # --- 3. Wrap the formatted text in the colored HTML block ---"
"0","    # Combine all lines into a single string with newline characters"
"0","  text_collapsed <- paste(output_lines, collapse = ""\n"")"
"0","  # Get the color for block 3 from the variable defined in your setup chunk"
"0","  color <- summary_colors[""block3""]"
"0","  # Create the final HTML string"
"0","  html_output <- sprintf("
"0","      '<div style=""background-color: %s; border: 1px solid #ddd; border-radius: 5px; padding: 10px;""><pre style=""margin: 0;"">%s</pre></div>',"
"0","      color,"
"0","      htmltools::htmlEscape(text_collapsed)"
"0","  )"
"0","  # Use asis_output to print the raw HTML directly into the document"
"0","  asis_output(html_output)"
"0","}"
